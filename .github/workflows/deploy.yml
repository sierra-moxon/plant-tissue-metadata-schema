name: Build & Deploy Documentation and DataHarmonizer
on:
  push:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build-docs:
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.9'
          
      - name: Install UV
        run: curl -LsSf https://astral.sh/uv/install.sh | sh
        
      - name: Install Just
        run: curl --proto '=https' --tlsv1.2 -sSf https://just.systems/install.sh | bash -s -- --to ~/.local/bin
        
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          
      - name: Install dependencies
        run: |
          source $HOME/.cargo/env
          export PATH="$HOME/.local/bin:$PATH"
          uv sync --group dev
          
      - name: Build DataHarmonizer and integrate with docs
        run: |
          source $HOME/.cargo/env
          export PATH="$HOME/.local/bin:$PATH"
          npm install
          npm run build
          uv run just gen-doc
          cp -r dist/assets docs/
          cp dist/index.html docs/harmonizer.html
          sed -i 's|"/assets/|"assets/|g' docs/harmonizer.html
          mkdir -p docs/schemas
          uv run gen-linkml --materialize-patterns --materialize-attributes src/plant_tissue_metadata_schema/schema/plant_tissue_metadata_schema.yaml > docs/schemas/plant-tissue-metadata-schema.json
          cp menu.json docs/
          uv run mkdocs build
          mkdir -p site/schemas
          cp docs/schemas/plant-tissue-metadata-schema.json site/schemas/
          cp docs/menu.json site/
          
      - name: Upload docs artifact
        uses: actions/upload-artifact@v4
        with:
          name: docs-site
          path: site/

  deploy:
    needs: [build-docs]
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Download docs artifact
        uses: actions/download-artifact@v4
        with:
          name: docs-site
          path: site
          
      - name: Upload pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'site'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4